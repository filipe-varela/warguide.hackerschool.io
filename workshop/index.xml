<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Workshops on Guia do Workshop de Android do Recrutamento</title>
    <link>https://filipe-varela.github.io/warguide.hackerschool.io/workshop/</link>
    <description>Guia do Workshop de Android do Recrutamento (Workshops)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-pt</language>
    <lastBuildDate>Fri, 17 Dec 2021 15:32:02 +0000</lastBuildDate>
    
    <atom:link href="https://filipe-varela.github.io/warguide.hackerschool.io/workshop/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Exemplo do Frotend</title>
      <link>https://filipe-varela.github.io/warguide.hackerschool.io/workshop/exemplo_frotend/</link>
      <pubDate>Fri, 17 Dec 2021 15:32:02 +0000</pubDate>
      
      <guid>https://filipe-varela.github.io/warguide.hackerschool.io/workshop/exemplo_frotend/</guid>
      <description>&lt;p&gt;O exemplo começa em alterar o ficheiro &lt;code&gt;activity_main.xml&lt;/code&gt; em &lt;code&gt;/src/main/res/layout&lt;/code&gt; e poderá ser provavelmente um dos separadores dentro do Android Studio já aberto.
Tem-se como objetivo para este exemplo ter um botão que altere o texto de forma alternada.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;androidx.constraintlayout.widget.ConstraintLayout&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns:android=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://schemas.android.com/apk/res/android&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns:app=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://schemas.android.com/apk/res-auto&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns:tools=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://schemas.android.com/tools&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;match_parent&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;match_parent&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;tools:context=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.MainActivity&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;TextView&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrap_content&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrap_content&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;android:text=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;app:layout_constraintBottom_toBottomOf=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;app:layout_constraintLeft_toLeftOf=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;app:layout_constraintRight_toRightOf=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;app:layout_constraintTop_toTopOf=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/androidx.constraintlayout.widget.ConstraintLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O primeiro paço aqui seria adaptar o &lt;code&gt;ConstraintLayout&lt;/code&gt; para um &lt;em&gt;layout&lt;/em&gt; que nos permita posicionar melhor os elementos com poucas linhas de código.
Para tal, iremos utilizar o &lt;code&gt;RelativeLayout&lt;/code&gt;, adaptando posteriormente o &lt;code&gt;TextView&lt;/code&gt; para manter o mesmo aspeto anterior a esta alteração (que foi trocar o nome do ViewGroup e retirar as linhas que continham o package da &lt;code&gt;app&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;RelativeLayout&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns:android=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://schemas.android.com/apk/res/android&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns:app=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://schemas.android.com/apk/res-auto&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns:tools=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://schemas.android.com/tools&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;match_parent&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;match_parent&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;tools:context=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.MainActivity&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;TextView&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrap_content&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrap_content&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;android:text=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_centerInParent=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/RelativeLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../images/exemplo_frotend_1.png&#34; alt=&#34;Exemplo 1&#34;&gt;&lt;/p&gt;
&lt;p&gt;Um aspeto interessante é de que as propriedades usadas são diretas na interpretação, sendo que a linha adicionada no texto ser &lt;code&gt;layout_centerInParent&lt;/code&gt; indica que o elemento vai ser centrado no centro do elemento parente.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Define-se como elemento parente ou &lt;em&gt;parent&lt;/em&gt; o elemento que está um nível acima na hierarquia. Por vezes, pode-se ter como o parente o ecrã do telemóvel se o &lt;em&gt;ViewGroup&lt;/em&gt; for o elemento mais exterior que consigamos alterar&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Por fim, pretende-se adicionar um botão, bastando adicionar as respetivas linhas já vistas anteriormente no ficheiro:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;Button&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrap_content&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrap_content&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:text=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Click me!&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Contudo, este aparecerá no canto superior esquerdo do ecrã.
este é a posição &lt;em&gt;default&lt;/em&gt; do android aquando não estiver definida um posicionamento para o mesmo.
Para evitar isto, vamos utilizar o conceito de ID já falado e utilizar uma das propriedades provenientes do &lt;code&gt;RelativeLayout&lt;/code&gt;, &lt;code&gt;android:layout_below=&amp;quot;id&lt;/code&gt;: Coloca o &lt;em&gt;View&lt;/em&gt; em questão debaixo de outro a partir do ID deste último - &lt;a href=&#34;https://developer.android.com/reference/android/widget/RelativeLayout.LayoutParams#attr_android:layout_below&#34;&gt;doc&lt;/a&gt;.
Neste caso, iremos colocar esta linha no botão e necessitar de referenciar o texto que está centrado no ecrã:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Relative Layout --&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;TextView&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@+id/txt_menu&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrap_content&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrap_content&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:text=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_centerInParent=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;Button&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrap_content&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrap_content&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:text=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Click me!&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_centerHorizontal=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_below=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@+id/txt_menu&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Relative Layout --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../images/exemplo_frotend_2.png&#34; alt=&#34;Exemplo 2&#34;&gt;&lt;/p&gt;
&lt;p&gt;Sendo que se acrescentou a linha &lt;code&gt;layout_centerHorizontal&lt;/code&gt; para o botão ficasse centrado horizontalmente com o seu parente.&lt;/p&gt;
&lt;p&gt;Está-se por concluído, por enquanto o frotend desta secção.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Identificadores - ID&#39;s</title>
      <link>https://filipe-varela.github.io/warguide.hackerschool.io/workshop/id/</link>
      <pubDate>Fri, 17 Dec 2021 15:31:34 +0000</pubDate>
      
      <guid>https://filipe-varela.github.io/warguide.hackerschool.io/workshop/id/</guid>
      <description>&lt;p&gt;De uma forma de conseguir referenciar vários elementos dentro do &lt;em&gt;layout&lt;/em&gt; é através de identificadores.
Os mesmos podem ser adicionados da seguinte maneira e utilizando o exemplo do &lt;em&gt;TextView&lt;/em&gt; da página anterior:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;TextView&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@+id/txt_view&amp;#34;&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrap_content&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrap_content&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:text=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;E este conceito será usado no &lt;a href=&#34;../exemplo_frotend&#34;&gt;exemplo&lt;/a&gt; prático seguinte&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>View e ViewGroup</title>
      <link>https://filipe-varela.github.io/warguide.hackerschool.io/workshop/view_viewgroup/</link>
      <pubDate>Fri, 17 Dec 2021 15:31:29 +0000</pubDate>
      
      <guid>https://filipe-varela.github.io/warguide.hackerschool.io/workshop/view_viewgroup/</guid>
      <description>&lt;p&gt;Exemplos de &lt;a href=&#34;https://developer.android.com/reference/android/view/View&#34;&gt;&lt;em&gt;View&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Textview&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;TextView&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrap_content&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrap_content&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:text=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../images/txtview.png&#34; alt=&#34;TextView&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Button&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;Button&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrap_content&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wrap_content&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:text=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Click me!&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;../images/btnview.png&#34; alt=&#34;Button&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Como os &lt;a href=&#34;https://developer.android.com/reference/android/view/ViewGroup&#34;&gt;&lt;em&gt;ViewGroup&lt;/em&gt;&lt;/a&gt;&amp;rsquo;s são mais fáceis de testar na prática com vários elementos, fica aqui um possível arranjo dos mesmos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- ConstraintLayout (abreviado no nome e normalmente default)     --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Este layout é usado de uma forma mais visual e ajuda a colocar --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- constraints ou relações/guias entre elementos e parente        --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;ConstraintLayout&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;match_parent&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;match_parent&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;lt;/ConstraintLayout&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- RelativeLayout                                                 --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Este layout serve para posicionar elementos relativos a um     --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- outro ou com o parente                                         --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;RelativeLayout&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;match_parent&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;match_parent&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;lt;/RelativeLayout&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- LinearLayout                                                   --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Este layout organiza os vários elementos internos em colunas,  --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- com orientation colocada para horizontal, ou em linhas, com a  --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- orientation colocada para vertical                             --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;LinearLayout&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;match_parent&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;match_parent&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:orientation=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vertical&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- GridLayout --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Como o nome indica, este ViewGroup posiciona os seus elementos --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- sob uma grelha, onde rowCount e columnCount têm que ser forne- --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- cidos para poder funcionar                                     --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;GridLayout&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;match_parent&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_height=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;match_parent&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:rowCount=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;android:columnCount=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;lt;/GridLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>XML</title>
      <link>https://filipe-varela.github.io/warguide.hackerschool.io/workshop/xml/</link>
      <pubDate>Fri, 17 Dec 2021 15:31:18 +0000</pubDate>
      
      <guid>https://filipe-varela.github.io/warguide.hackerschool.io/workshop/xml/</guid>
      <description>&lt;p&gt;A linguagem de frotend usada pelo Android Studio é denominada como &lt;em&gt;Extensible Markup Language&lt;/em&gt; ou &lt;em&gt;XML&lt;/em&gt;!
Esta linguagem é bastante semelhante a uma junção de HTML com CSS, de certa maneira, onde se tem o conceito de tag&amp;rsquo;s, hierarquia e propriedades.
Para além disso, esta linguagem pode ser usada para armazenar informação, montar esquemas ou &lt;em&gt;layouts&lt;/em&gt; e muito mais!&lt;/p&gt;
&lt;h2 id=&#34;formato&#34;&gt;Formato&lt;/h2&gt;
&lt;p&gt;Em termos de formato dentro do Android Studio e em termos de &lt;em&gt;layout&lt;/em&gt;, um elemento simples é representado da seguinte maneira:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;tag&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;package:propriedade=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;valor&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A fim de facilitar a conexão entre nomenclatura do XML e de Android Studio, elementos com esta estrutura são denominados, no &lt;em&gt;layout&lt;/em&gt; mais uma vez, como &lt;em&gt;View&lt;/em&gt;.
Por outro lado, se se quiser ter uma hierarquia no ficheiro de XML, tem-se o seguinte:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;grouptag&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;package:propriedade=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;“valor“&lt;/span&gt;
    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;tag&lt;/span&gt;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;package:propriedade=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;“valor“&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;tag&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/grouptag&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Denominando o elemento &lt;code&gt;grouptag&lt;/code&gt; neste caso como &lt;code&gt;ViewGroup&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;packages&#34;&gt;Packages&lt;/h2&gt;
&lt;p&gt;A fim de apresentar mais o conceito que dedicar tempo à sua explicação, quando se quis dizer &lt;code&gt;propriedade&lt;/code&gt; dentro de cada &lt;code&gt;tag&lt;/code&gt; e &lt;code&gt;grouptag&lt;/code&gt;, estava-se a referir aos seguintes módulos que devem estar garantidamente dentro do ficheiro XML caso uma das suas propriedades seja usada:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!- Package Android: exemplo --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;grouptag&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns:android=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://schemas.android.com/apk/res/android&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;tag&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;android:layout_width=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;math_parent&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/grouptag&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!- Package App: exemplo --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;grouptag&lt;/span&gt; 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns:app=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://schemas.android.com/apk/res-auto&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;tag&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;app:layout_constraintBottom_toBottomOf=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;parent&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/grouptag&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Sendo o que muda em ambos casos é o que se esteja a importar, com &lt;code&gt;xmlns:package=&amp;quot;url&amp;quot;&lt;/code&gt;, e o respetivo nome do package.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Estrutura do Android Studio</title>
      <link>https://filipe-varela.github.io/warguide.hackerschool.io/workshop/estrutura/</link>
      <pubDate>Fri, 17 Dec 2021 15:30:53 +0000</pubDate>
      
      <guid>https://filipe-varela.github.io/warguide.hackerschool.io/workshop/estrutura/</guid>
      <description>&lt;p&gt;Para se poder mexer no programa e desenvolver assim a aplicação, tem-se de criar um novo projeto em &lt;code&gt;File -&amp;gt; New -&amp;gt; New project&lt;/code&gt; e escolher &lt;code&gt;Empty Activity&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../images/new_project.png&#34; alt=&#34;New Project&#34;&gt;&lt;/p&gt;
&lt;p&gt;Depois é preciso escolher um nome para o projeto, isso será arbitrário, escolher a linguagem Kotlin e &lt;code&gt;Minimum SDK&lt;/code&gt; para 27, mas poderá ser um nível inferior se for necessário (mas ter atenção na escolha!).
Para este workshop, o nível de API 27 será mais que suficiente.&lt;/p&gt;
&lt;h2 id=&#34;estrutura-do-projeto-internamente&#34;&gt;Estrutura do projeto internamente&lt;/h2&gt;
&lt;p&gt;O projeto é estruturado da seguinte maneira:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../images/estrutura.png&#34; alt=&#34;Estrutura do projeto&#34;&gt;&lt;/p&gt;
&lt;p&gt;Onde:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Os ficheiros de backend se encontram em &lt;code&gt;MyApp/app/src/main/java/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Os ficheiros de frotend se encontram em &lt;code&gt;MyApp/app/src/main/res/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Os ficheiros usados para &lt;em&gt;build&lt;/em&gt; da aplicação são os ficheiros com terminação de &lt;code&gt;*.gradle&lt;/code&gt;, onde iremos utilizar para implementar componentes externos ao Android Studio.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Workshop de Android</title>
      <link>https://filipe-varela.github.io/warguide.hackerschool.io/workshop/intro/</link>
      <pubDate>Fri, 17 Dec 2021 14:55:23 +0000</pubDate>
      
      <guid>https://filipe-varela.github.io/warguide.hackerschool.io/workshop/intro/</guid>
      <description>&lt;p&gt;Este é a versão escrita do workshop de AppDev feita no dia 16/12/2021. 
Nesta página é possível verificar as diferentes partes do mesmo em formato escrito e com &lt;em&gt;snippets&lt;/em&gt; de código.
Entretanto, qualquer material pode ser visto &lt;a href=&#34;https://drive.google.com/drive/folders/1CCDfb7o79b6eR-xim18rZ4XgxLRkmvN8?usp=sharing&#34;&gt;aqui&lt;/a&gt;, bem como não esquecer que têm até dia 6 de janeiro de 2022 para entregar!&lt;/p&gt;
&lt;h2 id=&#34;tópicos-do-workshop&#34;&gt;Tópicos do workshop&lt;/h2&gt;
&lt;p&gt;O workshop foi estruturado da seguinte forma:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Android Studio
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;../estrutura&#34;&gt;Estrutura do Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Frotend
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;../xml&#34;&gt;XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../view_viewgroup&#34;&gt;View vs ViewGroup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../id&#34;&gt;ID&amp;rsquo;s&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../exemplo_frotend&#34;&gt;Exemplo prático&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Backend
&lt;ol&gt;
&lt;li&gt;Java VS Kotlin&lt;/li&gt;
&lt;li&gt;Python &amp;amp; Kotlin&lt;/li&gt;
&lt;li&gt;Kotlin Trivia&lt;/li&gt;
&lt;li&gt;Null Safety&lt;/li&gt;
&lt;li&gt;Conexão de Backend com Frotend&lt;/li&gt;
&lt;li&gt;Exemplo prático&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Mentalidade de AppDev
&lt;ol&gt;
&lt;li&gt;Conceitos vários
&lt;ol&gt;
&lt;li&gt;Activity vs Fragment&lt;/li&gt;
&lt;li&gt;Intent&lt;/li&gt;
&lt;li&gt;SharedPreferences&lt;/li&gt;
&lt;li&gt;Resources&lt;/li&gt;
&lt;li&gt;Box-Model&lt;/li&gt;
&lt;li&gt;Utils&lt;/li&gt;
&lt;li&gt;Exemplo prático final&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Boas práticas&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../general/enunciado&#34;&gt;Enunciado&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>
